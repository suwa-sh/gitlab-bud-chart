name: Reusable Docker Build

on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
        description: 'Build context path'
      image-suffix:
        required: true
        type: string
        description: 'Image name suffix (e.g., backend, frontend)'
      platforms:
        required: false
        type: string
        default: 'linux/amd64'
        description: 'Target platforms for build'
      build-args:
        required: false
        type: string
        description: 'Additional build arguments'
    secrets:
      registry-token:
        required: true
        description: 'Registry authentication token'

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.registry-token }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-${{ inputs.image-suffix }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: ${{ inputs.build-args }}
          
      - name: Export image reference
        id: image
        run: |
          echo "image=${{ env.REGISTRY }}/${{ github.repository }}-${{ inputs.image-suffix }}@${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT