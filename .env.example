# ===================================
# GitLab Bud Chart - Environment Variables Template
# ===================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env files to version control!

# ===================================
# GITLAB CONFIGURATION
# ===================================

# GitLab instance URL (required)
# Example: https://gitlab.example.com or http://localhost:8080
GITLAB_URL=http://localhost:8080

# GitLab Personal Access Token (required)
# Generate at: GitLab > User Settings > Access Tokens
# Required scopes: api, read_user, read_repository
GITLAB_TOKEN=your_gitlab_token_here

# GitLab Project ID (required)
# Find in: Project > Settings > General > Project ID
GITLAB_PROJECT_ID=1

# ===================================
# PROXY CONFIGURATION (Optional)
# ===================================

# HTTP proxy for GitLab API requests
# Example: http://proxy.example.com:8080
# HTTP_PROXY=

# HTTPS proxy for GitLab API requests  
# Example: https://proxy.example.com:8080
# HTTPS_PROXY=

# Comma-separated list of hosts to bypass proxy
# Example: localhost,127.0.0.1,.example.com
# NO_PROXY=

# SSL certificate verification for GitLab (default: true)
# Set to false only for self-signed certificates in development
# GITLAB_SSL_VERIFY=true

# ===================================
# API CONFIGURATION
# ===================================

# Backend API host and port
API_HOST=127.0.0.1
API_PORT=8000

# Frontend development server port
FRONTEND_PORT=3000

# Frontend API URL (for Docker containers)
VITE_API_URL=http://localhost:8000

# ===================================
# DEVELOPMENT SETTINGS
# ===================================

# Environment (development, staging, production)
NODE_ENV=development

# Enable debug logging
DEBUG=true

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# ===================================
# DATABASE (if needed in future)
# ===================================

# Database URL (currently not used, but prepared for future)
# DATABASE_URL=sqlite:///./gitlab_bud_chart.db

# ===================================
# TESTING
# ===================================

# Test GitLab configuration (for E2E tests)
TEST_GITLAB_URL=http://localhost:8080
TEST_GITLAB_TOKEN=test_token
TEST_PROJECT_ID=1

# Playwright configuration
PLAYWRIGHT_BROWSERS_PATH=./playwright-browsers

# ===================================
# SECURITY
# ===================================

# Secret key for sessions (if needed)
# SECRET_KEY=your_secret_key_here

# JWT secret (if authentication is added)
# JWT_SECRET=your_jwt_secret_here

# ===================================
# PERFORMANCE & MONITORING
# ===================================

# Request timeout in seconds
REQUEST_TIMEOUT=30

# Maximum requests per minute (rate limiting)
RATE_LIMIT_PER_MINUTE=100

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# ===================================
# FEATURE FLAGS
# ===================================

# Enable experimental features
ENABLE_EXPERIMENTAL_FEATURES=false

# Enable detailed analytics
ENABLE_ANALYTICS=false

# ===================================
# DEPLOYMENT (Production only)
# ===================================

# Production database URL
# PRODUCTION_DATABASE_URL=

# Redis URL for caching
# REDIS_URL=

# External API URLs
# EXTERNAL_API_URL=

# CDN URL for static assets
# CDN_URL=

# ===================================
# EXAMPLES OF ACTUAL VALUES
# ===================================

# Example for local development:
# GITLAB_URL=http://localhost:8080
# GITLAB_TOKEN=glpat-xxxxxxxxxxxxxxxxxxxx
# GITLAB_PROJECT_ID=1
# API_HOST=127.0.0.1
# API_PORT=8000
# FRONTEND_PORT=3000
# NODE_ENV=development
# DEBUG=true

# Example for production:
# GITLAB_URL=https://gitlab.company.com
# GITLAB_TOKEN=glpat-production-token-here
# GITLAB_PROJECT_ID=42
# API_HOST=0.0.0.0
# API_PORT=8000
# NODE_ENV=production
# DEBUG=false
# LOG_LEVEL=WARNING